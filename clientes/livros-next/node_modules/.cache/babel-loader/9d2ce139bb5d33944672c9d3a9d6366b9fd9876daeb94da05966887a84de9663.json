{"ast":null,"code":"const livros = [{\n  \"codigo\": 1,\n  \"codEditora\": 1,\n  \"titulo\": \"titulo1\",\n  \"resumo\": \"xxxxx\",\n  \"autores\": ['nome11', 'nome12', 'nome13']\n}, {\n  \"codigo\": 2,\n  \"codEditora\": 2,\n  \"titulo\": \"titulo2\",\n  \"resumo\": \"xxxxx\",\n  \"autores\": ['nome21', 'nome22', 'nome23']\n}, {\n  \"codigo\": 3,\n  \"codEditora\": 3,\n  \"titulo\": \"titulo3\",\n  \"resumo\": \"xxxxx\",\n  \"autores\": ['nome31', 'nome32', 'nome33']\n}];\nclass ControleLivros {\n  obterLivros() {\n    return livros;\n  }\n  incluir(livro) {\n    let Livros = this.obterLivros();\n    let maxId = Livros.reduce((max, Livros) => Livros[\"codigo\"] > max ? Livros[\"codigo\"] : max, Livros[0][\"codigo\"]);\n    //livro.codigo = maxId+1\n  }\n\n  excluir(codigo) {\n    let index = this.obterLivros().findIndex(livro => livro[\"codigo\"] === codigo);\n    this.obterLivros().splice(index);\n  }\n}\nlet controle = new ControleLivros();\ncontrole.obterLivros().map(livro => console.log(livro));\nexport default ControleLivros;","map":{"version":3,"names":["livros","ControleLivros","obterLivros","incluir","livro","Livros","maxId","reduce","max","excluir","codigo","index","findIndex","splice","controle","map","console","log"],"sources":["C:/Users/Gustavo/Programas/Projetos/Missões Praticas/Missão Pratica Nivel 3/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["import { Livro } from '../modelo/Livro';\r\n\r\nconst livros: Array<Livro> = [\r\n    {\r\n        \"codigo\": 1,\r\n        \"codEditora\": 1,\r\n        \"titulo\": \"titulo1\",\r\n        \"resumo\": \"xxxxx\",\r\n        \"autores\": ['nome11','nome12','nome13']\r\n    },{\r\n        \"codigo\": 2,\r\n        \"codEditora\": 2,\r\n        \"titulo\": \"titulo2\",\r\n        \"resumo\": \"xxxxx\",\r\n        \"autores\": ['nome21','nome22','nome23']\r\n    },{\r\n        \"codigo\": 3,\r\n        \"codEditora\": 3,\r\n        \"titulo\": \"titulo3\",\r\n        \"resumo\": \"xxxxx\",\r\n        \"autores\": ['nome31','nome32','nome33']\r\n    },\r\n]\r\n\r\nclass ControleLivros {\r\n    obterLivros(){\r\n        return livros\r\n    }\r\n\r\n    incluir(livro: Livro){\r\n        let Livros = this.obterLivros()\r\n        let maxId = Livros.reduce(\r\n            (max, Livros) => (Livros[\"codigo\"] > max ? Livros[\"codigo\"] : max),\r\n            Livros[0][\"codigo\"]\r\n          );\r\n        //livro.codigo = maxId+1\r\n    }\r\n\r\n    excluir(codigo:number){\r\n        let index: number = this.obterLivros().findIndex(livro => livro[\"codigo\"] === codigo )\r\n        this.obterLivros().splice(index)\r\n    }\r\n}\r\n\r\nlet controle: ControleLivros = new ControleLivros()\r\n\r\ncontrole.obterLivros().map(livro => (\r\n    console.log(livro)\r\n))\r\n\r\nexport default ControleLivros"],"mappings":"AAEA,MAAMA,MAAoB,GAAG,CACzB;EACI,QAAQ,EAAE,CAAC;EACX,YAAY,EAAE,CAAC;EACf,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,OAAO;EACjB,SAAS,EAAE,CAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ;AAC1C,CAAC,EAAC;EACE,QAAQ,EAAE,CAAC;EACX,YAAY,EAAE,CAAC;EACf,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,OAAO;EACjB,SAAS,EAAE,CAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ;AAC1C,CAAC,EAAC;EACE,QAAQ,EAAE,CAAC;EACX,YAAY,EAAE,CAAC;EACf,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,OAAO;EACjB,SAAS,EAAE,CAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ;AAC1C,CAAC,CACJ;AAED,MAAMC,cAAc,CAAC;EACjBC,WAAW,GAAE;IACT,OAAOF,MAAM;EACjB;EAEAG,OAAO,CAACC,KAAY,EAAC;IACjB,IAAIC,MAAM,GAAG,IAAI,CAACH,WAAW,EAAE;IAC/B,IAAII,KAAK,GAAGD,MAAM,CAACE,MAAM,CACrB,CAACC,GAAG,EAAEH,MAAM,KAAMA,MAAM,CAAC,QAAQ,CAAC,GAAGG,GAAG,GAAGH,MAAM,CAAC,QAAQ,CAAC,GAAGG,GAAI,EAClEH,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CACpB;IACH;EACJ;;EAEAI,OAAO,CAACC,MAAa,EAAC;IAClB,IAAIC,KAAa,GAAG,IAAI,CAACT,WAAW,EAAE,CAACU,SAAS,CAACR,KAAK,IAAIA,KAAK,CAAC,QAAQ,CAAC,KAAKM,MAAM,CAAE;IACtF,IAAI,CAACR,WAAW,EAAE,CAACW,MAAM,CAACF,KAAK,CAAC;EACpC;AACJ;AAEA,IAAIG,QAAwB,GAAG,IAAIb,cAAc,EAAE;AAEnDa,QAAQ,CAACZ,WAAW,EAAE,CAACa,GAAG,CAACX,KAAK,IAC5BY,OAAO,CAACC,GAAG,CAACb,KAAK,CACpB,CAAC;AAEF,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}